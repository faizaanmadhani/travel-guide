"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const graphql_1 = require("graphql");
const errors_1 = require("./errors");
const graphql_toolkit_1 = require("graphql-toolkit");
async function executePlugin(options, plugin) {
    if (!plugin || !plugin.plugin || typeof plugin.plugin !== 'function') {
        throw new errors_1.DetailedError(`Invalid Custom Plugin "${options.name}"`, `
        Plugin ${options.name} does not export a valid JS object with "plugin" function.
  
        Make sure your custom plugin is written in the following form:
  
        module.exports = {
          plugin: (schema, documents, config) => {
            return 'my-custom-plugin-content';
          },
        };
        `);
    }
    const outputSchema = options.schemaAst || graphql_1.buildASTSchema(options.schema);
    const documents = options.documents || [];
    if (outputSchema && documents.length > 0 && !options.skipDocumentsValidation) {
        const errors = graphql_toolkit_1.validateGraphQlDocuments(outputSchema, documents);
        graphql_toolkit_1.checkValidationErrors(errors);
    }
    if (plugin.validate && typeof plugin.validate === 'function') {
        try {
            await plugin.validate(outputSchema, documents, options.config, options.outputFilename, options.allPlugins);
        }
        catch (e) {
            throw new errors_1.DetailedError(`Plugin "${options.name}" validation failed:`, `
            ${e.message}
          `);
        }
    }
    return await Promise.resolve(plugin.plugin(outputSchema, documents, options.config, {
        outputFile: options.outputFilename,
        allPlugins: options.allPlugins,
    }));
}
exports.executePlugin = executePlugin;
//# sourceMappingURL=execute-plugin.js.map