import { SelectionSetNode, FieldNode, FragmentSpreadNode, InlineFragmentNode, GraphQLNamedType, GraphQLSchema, GraphQLInterfaceType, SelectionNode } from 'graphql';
import { NormalizedScalarsMap, ConvertNameFn, LoadedFragment } from './types';
import { GraphQLObjectType, GraphQLNonNull, GraphQLList } from 'graphql';
import { BaseVisitorConvertOptions } from './base-visitor';
export declare type PrimitiveField = string;
export declare type PrimitiveAliasedFields = {
    alias: string;
    fieldName: string;
};
export declare type LinkField = {
    alias: string;
    name: string;
    type: string;
    selectionSet: string;
};
export declare type FragmentsMap = {
    [onType: string]: string[];
};
export declare class SelectionSetToObject {
    protected _scalars: NormalizedScalarsMap;
    protected _schema: GraphQLSchema;
    protected _convertName: ConvertNameFn<BaseVisitorConvertOptions>;
    protected _addTypename: boolean;
    protected _preResolveTypes: boolean;
    protected _nonOptionalTypename: boolean;
    protected _loadedFragments: LoadedFragment[];
    protected _namespacedImportName: string | null;
    protected _dedupeOperationSuffix: boolean;
    protected _enumPrefix: boolean;
    protected _parentSchemaType?: GraphQLNamedType;
    protected _selectionSet?: SelectionSetNode;
    protected _primitiveFields: PrimitiveField[];
    protected _primitiveAliasedFields: PrimitiveAliasedFields[];
    protected _linksFields: LinkField[];
    protected _fragments: FragmentsMap;
    protected _queriedForTypename: boolean;
    constructor(_scalars: NormalizedScalarsMap, _schema: GraphQLSchema, _convertName: ConvertNameFn<BaseVisitorConvertOptions>, _addTypename: boolean, _preResolveTypes: boolean, _nonOptionalTypename: boolean, _loadedFragments: LoadedFragment[], _namespacedImportName: string | null, _dedupeOperationSuffix: boolean, _enumPrefix: boolean, _parentSchemaType?: GraphQLNamedType, _selectionSet?: SelectionSetNode);
    createNext(parentSchemaType: GraphQLNamedType, selectionSet: SelectionSetNode): SelectionSetToObject;
    protected wrapTypeWithModifiers(baseType: string, type: GraphQLObjectType | GraphQLNonNull<GraphQLObjectType> | GraphQLList<GraphQLObjectType>): string;
    /**
     * traverse the inline fragment nodes recursively for colleting the selectionSets on each type
     */
    _collectInlineFragments(parentType: GraphQLNamedType, nodes: InlineFragmentNode[], types: Map<string, SelectionNode[]>): any;
    protected _getPossibleTypes(type: GraphQLNamedType): Array<GraphQLObjectType>;
    protected _createInlineFragmentForFieldNodes(parentType: GraphQLNamedType, fieldNodes: FieldNode[]): InlineFragmentNode;
    readonly string: string;
    protected buildFragmentSpreadString(fragmentSpreadNodes: FragmentSpreadNode[]): string;
    protected buildSelectionSetString(parentSchemaType: GraphQLObjectType, selectionNodes: SelectionNode[]): string;
    protected buildFieldsWithoutPick(parentType: GraphQLObjectType): string;
    protected buildAliasedPrimitiveFieldsWithoutPick(schemaType: GraphQLObjectType | GraphQLInterfaceType, fields: PrimitiveAliasedFields[]): {
        name: string;
        type: string;
    }[];
    protected buildLinkFieldsWithoutPick(fields: LinkField[]): {
        name: string;
        type: string;
    }[];
    protected buildPrimitiveFieldsWithoutPick(schemaType: GraphQLObjectType | GraphQLInterfaceType, fields: PrimitiveField[]): {
        name: string;
        type: string;
    }[];
    protected buildTypeNameField(type: GraphQLObjectType, nonOptionalTypename?: boolean, addTypename?: boolean, queriedForTypename?: boolean): {
        name: string;
        type: string;
    };
    protected buildPrimitiveFields(parentName: string, fields: PrimitiveField[]): string | null;
    protected buildAliasedPrimitiveFields(parentName: string, fields: PrimitiveAliasedFields[]): string | null;
    protected formatNamedField(name: string): string;
    protected buildLinkFields(fields: LinkField[]): string | null;
}
