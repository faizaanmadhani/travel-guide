import { GraphQLSchema, FieldDefinitionNode, GraphQLNamedType } from 'graphql';
export declare const federationSpec: import("graphql").DocumentNode;
export declare function addFederationToSchema(schema: GraphQLSchema): GraphQLSchema;
export declare class ApolloFederation {
    private enabled;
    private schema;
    private providesMap;
    constructor({ enabled, schema }: {
        enabled: boolean;
        schema: GraphQLSchema;
    });
    filterTypeNames(typeNames: string[]): string[];
    filterFieldNames(fieldNames: string[]): string[];
    skipDirective(name: string): boolean;
    skipScalar(name: string): boolean;
    skipField({ fieldNode, parentType }: {
        fieldNode: FieldDefinitionNode;
        parentType: GraphQLNamedType;
    }): boolean;
    translateParentType({ fieldNode, parentType, parentTypeSignature }: {
        fieldNode: FieldDefinitionNode;
        parentType: GraphQLNamedType;
        parentTypeSignature: string;
    }): string;
    private isExternalAndNotProvided;
    private isExternal;
    private hasProvides;
    private translateFieldSet;
    private extractFieldSet;
    private createMapOfProvides;
}
