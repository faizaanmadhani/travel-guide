"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const inquirer = require("inquirer");
const questions_1 = require("./questions");
const targets_1 = require("./targets");
const types_1 = require("./types");
const helpers_1 = require("./helpers");
function log(...msgs) {
    // tslint:disable-next-line
    console.log(...msgs);
}
async function init() {
    log(`
    Welcome to ${helpers_1.bold('GraphQL Code Generator')}!
    Answer few questions and we will setup everything for you.
  `);
    const possibleTargets = await targets_1.guessTargets();
    const answers = await inquirer.prompt(questions_1.getQuestions(possibleTargets));
    // define config
    const config = {
        overwrite: true,
        schema: answers.schema,
        documents: answers.targets.includes(types_1.Tags.browser) ? answers.documents : null,
        generates: {
            [answers.output]: {
                plugins: answers.plugins.map(p => p.value),
            },
        },
    };
    // introspection
    if (answers.introspection) {
        addIntrospection(config);
    }
    // config file
    const { relativePath } = helpers_1.writeConfig(answers, config);
    // write package.json
    helpers_1.writePackage(answers, relativePath);
    // Emit status to the terminal
    log(`
    Config file generated at ${helpers_1.bold(relativePath)}
    
      ${helpers_1.bold('$ npm install')}

    To install the plugins.

      ${helpers_1.bold(`$ npm run ${answers.script}`)}

    To run GraphQL Code Generator.
  `);
}
exports.init = init;
// adds an introspection to `generates`
function addIntrospection(config) {
    config.generates['./graphql.schema.json'] = {
        plugins: ['introspection'],
    };
}
//# sourceMappingURL=index.js.map