import { RawResolversConfig } from '@graphql-codegen/visitor-plugin-common';
import { CodegenPlugin, PluginFunction } from '@graphql-codegen/plugin-helpers';
import { TypeScriptResolversVisitor } from './visitor';
export interface TypeScriptResolversPluginConfig extends RawResolversConfig {
    /**
     * @name immutableTypes
     * @type boolean
     * @description Generates immutable types by adding `readonly` to properties and uses `ReadonlyArray`.
     * @default false
     *
     * @example
     * ```yml
     * generates:
     * path/to/file.ts:
     *  plugins:
     *    - typescript
     *    - typescript-resolvers
     *  config:
     *    immutableTypes: true
     * ```
     */
    immutableTypes?: boolean;
    /**
     * @name useIndexSignature
     * @type boolean
     * @description Adds an index signature to any generates resolver.
     * @default false
     *
     * @example
     * ```yml
     * generates:
     * path/to/file.ts:
     *  plugins:
     *    - typescript
     *    - typescript-resolvers
     *  config:
     *    useIndexSignature: true
     * ```
     */
    useIndexSignature?: boolean;
    /**
     * @name noSchemaStitching
     * @type boolean
     * @description Disables Schema Stitching support
     * @default false
     * @warning The default behavior will be reversed in the next major release. Support for Schema Stitching will be disabled by default.
     *
     * @example
     * ```yml
     * generates:
     * path/to/file.ts:
     *  plugins:
     *    - typescript
     *    - typescript-resolvers
     *  config:
     *    noSchemaStitching: true
     * ```
     */
    noSchemaStitching?: boolean;
}
export declare const plugin: PluginFunction<TypeScriptResolversPluginConfig>;
export declare const addToSchema: CodegenPlugin<{
    federation?: boolean;
}>['addToSchema'];
export { TypeScriptResolversVisitor };
