import { TypeScriptResolversPluginConfig } from './index';
import { ListTypeNode, NamedTypeNode, NonNullTypeNode, GraphQLSchema } from 'graphql';
import { ParsedResolversConfig, BaseResolversVisitor } from '@graphql-codegen/visitor-plugin-common';
export interface ParsedTypeScriptResolversConfig extends ParsedResolversConfig {
    avoidOptionals: boolean;
    immutableTypes: boolean;
    useIndexSignature: boolean;
}
export declare class TypeScriptResolversVisitor extends BaseResolversVisitor<TypeScriptResolversPluginConfig, ParsedTypeScriptResolversConfig> {
    constructor(pluginConfig: TypeScriptResolversPluginConfig, schema: GraphQLSchema);
    protected formatRootResolver(schemaTypeName: string, resolverType: string): string;
    private clearOptional;
    ListType(node: ListTypeNode): string;
    protected wrapWithListType(str: string): string;
    NamedType(node: NamedTypeNode): string;
    NonNullType(node: NonNullTypeNode): string;
}
